# ============================================================================
# FILE: devices/Under_Development/Modular/spotify.yaml
# ============================================================================

# Text sensors from Home Assistant
text_sensor:
  - platform: homeassistant
    id: spotify_title
    entity_id: sensor.spotify_title
    internal: true
    
  - platform: homeassistant
    id: spotify_artist
    entity_id: sensor.spotify_artist
    internal: true
    
  - platform: homeassistant
    id: spotify_album
    entity_id: sensor.spotify_album
    internal: true
    
  - platform: homeassistant
    id: spotify_album_art_url
    entity_id: sensor.spotify_album_art
    internal: true

# Binary sensor for playing state
binary_sensor:
  - platform: homeassistant
    id: spotify_is_playing
    entity_id: binary_sensor.spotify_playing
    internal: true

# Numeric sensors
sensor:
  - platform: homeassistant
    id: spotify_volume
    entity_id: sensor.spotify_volume
    internal: true
    
  - platform: homeassistant
    id: spotify_position
    entity_id: sensor.spotify_position
    internal: true
    
  - platform: homeassistant
    id: spotify_duration
    entity_id: sensor.spotify_duration
    internal: true

# Album art image
online_image:
  - id: spotify_album_art
    url: https://raw.githubusercontent.com/1liminal1/xiaozhi-esphome/main/images/Other/240x240/clock.png
    resize: 160x160
    format: PNG
    type: RGB565
    update_interval: never

# Fonts for Spotify (removed icon font since we're not using play/pause icon)
font:
  - file:
      type: gfonts
      family: ${font_family}
      weight: 700
    id: spotify_title_font
    size: 16
    glyphsets:
      - ${font_glyphsets}
    ignore_missing_glyphs: true
    
  - file:
      type: gfonts
      family: ${font_family}
      weight: 400
    id: spotify_artist_font
    size: 13
    glyphsets:
      - ${font_glyphsets}
    ignore_missing_glyphs: true
    
  - file:
      type: gfonts
      family: ${font_family}
      weight: 400
    id: spotify_small_font
    size: 11
    glyphsets:
      - ${font_glyphsets}
    ignore_missing_glyphs: true

# Colors
color:
  - id: spotify_green
    hex: "1ED760"
  - id: spotify_dark
    hex: "121212"
  - id: spotify_grey
    hex: "B3B3B3"

# State tracking
globals:
  - id: show_spotify_page
    type: bool
    restore_value: no
    initial_value: "false"

# Scripts
script:
  - id: open_spotify_page
    mode: restart
    then:
      - lambda: |-
          ESP_LOGD("spotify", "Opening Spotify page");
          id(show_spotify_page) = true;
          id(show_clock) = false;
      - script.execute: reset_screensaver
      
      # Fetch and update album art
      - lambda: |-
          if (id(spotify_album_art_url).has_state() && 
              id(spotify_album_art_url).state.length() > 10) {
            std::string url = id(spotify_album_art_url).state;
            ESP_LOGD("spotify", "Fetching album art from: %s", url.c_str());
            
            auto call = id(spotify_album_art).set_url(url);
            call.perform();
          } else {
            ESP_LOGW("spotify", "No valid album art URL available");
          }
      
      - delay: 1s
      - display.page.show: spotify_page
      - component.update: main_display

  - id: close_spotify_page
    mode: restart
    then:
      - lambda: |-
          ESP_LOGD("spotify", "Closing Spotify page");
          id(show_spotify_page) = false;
      - script.execute: draw_display

# Switch to enable auto-show
switch:
  - platform: template
    id: spotify_auto_show
    name: "Spotify Auto Show"
    icon: "mdi:spotify"
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    entity_category: config

# Update display every 5 seconds when on Spotify page (reduced from 1s)
interval:
  - interval: 5s
    then:
      - if:
          condition:
            lambda: 'return id(show_spotify_page);'
          then:
            - component.update: main_display